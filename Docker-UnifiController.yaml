#cloud-config
package_update: true
package_upgrade: true
package_reboot_if_required: true

users:
  - name: marc
    ssh-authorized-keys:
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPZezWV8Wct9B/jtIegSHl5TeLEZplOaBg9QZVg1IcZm marc@LAPTOP-MARC
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    groups: sudo
    shell: /bin/bash

groups:
  - docker

system_info:
  default_user:
    groups: [ docker ]

packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common

# add security to ssh config
write_files:
  - path: /etc/ssh/sshd_config
    content: |
         Port 22
         Protocol 2
         HostKey /etc/ssh/ssh_host_dsa_key
         HostKey /etc/ssh/ssh_host_ecdsa_key
         HostKey /etc/ssh/ssh_host_ed25519_key
         UsePrivilegeSeparation yes
         KeyRegenerationInterval 3600
         ServerKeyBits 1024
         SyslogFacility AUTH
         LogLevel INFO
         LoginGraceTime 120
         PermitRootLogin no
         StrictModes yes
         RSAAuthentication yes
         PubkeyAuthentication yes
         IgnoreRhosts yes
         RhostsRSAAuthentication no
         HostbasedAuthentication no
         PermitEmptyPasswords no
         ChallengeResponseAuthentication no
         X11Forwarding no
         X11DisplayOffset 10
         PrintMotd no
         PrintLastLog yes
         TCPKeepAlive yes
         AcceptEnv LANG LC_*
         UsePAM yes
         AllowUsers kuba

runcmd:
  - mkdir -p /etc/apt/keyrings
  - mkdir /usr/docker
  - mkdir /var/docker
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  - apt-get update
  - apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
  - systemctl enable docker
  - systemctl start docker
  - docker run -d -it --name nginx-proxy --restart unless-stopped -v /var/run/docker.sock:/tmp/docker.sock:ro -v /var/docker/nginx-proxy/certs:/etc/nginx/certs:ro -v /var/docker/nginx-proxy/conf.d:/etc/nginx/conf.d -v /var/docker/nginx-proxy/vhost.d:/etc/nginx/vhost.d -v /usr/share/nginx/html -p 80:80 -p 443:443 --label com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy jwilder/nginx-proxy:alpine
  - docker run -d -it --name unifi --restart unless-stopped -e "VIRTUAL_HOST=unifi2.mylemans.online" -e "VIRTUAL_PORT=8443" -e "VIRTUAL_PROTO=https" -e "LETSENCRYPT_HOST=unifi2.mylemans.online" -e "LETSENCRYPT_EMAIL=marc@mylemans.online" -e MEM_LIMIT=1024M -v /var/docker/unifi:/config -p 3478:3478/udp -p 8080:8080 ghcr.io/linuxserver/unifi-controller
  - docker run -d -it --name nginx-letsencrypt --restart unless-stopped --volumes-from nginx-proxy -v /var/docker/nginx-proxy/certs:/etc/nginx/certs:rw -v /var/run/docker.sock:/var/run/docker.sock:ro nginxproxy/acme-companion

